name: Release

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
    - master

    # Publish `v1.2.3` tags as releases.
    tags:
    - x*

env:
  IMAGE_REPO: docker.io/mgoltzsche/liteide

jobs:
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Build image
      run: make IMAGE=$IMAGE_REPO:local

    - name: Log into DockerHub registry
      run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login docker.io -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Push image
      run: |
        set -eu

        # Strip git ref prefix from version
        TAGS=$(echo "$GITHUB_REF" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "$GITHUB_REF" == "refs/tags/v"* ]] && TAGS=$(echo $TAGS | sed -e 's/^v//')
        # Expand tags: 1.2.3 -> 1 1.2 1.2.3
        TAGS="$(echo "$TAGS" | sed -E -e 's/^(x[0-9\.]+)(-.+)?$/\0 \1/')"

        LATEST_TAG=latest
        [ "$TAGS" == "master" ] && IMAGE_TAGS="$LATEST_TAG" || IMAGE_TAGS="$LATEST_TAG $TAGS"
        for TAG in $IMAGE_TAGS; do
          echo "Pushing image $IMAGE_REPO:$TAG..."
          docker tag $IMAGE_REPO:local $IMAGE_REPO:$TAG
          docker push $IMAGE_REPO:$TAG
        done
      env:
        GITHUB_REF: ${{ github.ref }}

    - name: Create release
      if: github.ref != 'refs/heads/master'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: false

